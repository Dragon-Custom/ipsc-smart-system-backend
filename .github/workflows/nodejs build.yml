name: Node.js CI

on: [push]

permissions:
  actions: write
  contents: write
  issues: write
  pull-requests: write
  packages: write
  deployments: write
  id-token: write
  attestations: write


jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run gen
      - run: npm run build
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{github.sha}}-cache
  zip:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Restore cached build
        uses: actions/cache/restore@v4
        with:
          path: build
          key: ${{github.sha}}-cache
      - run: ls
      - run: zip -r "server.zip" -v "build/" "package.json" "package-lock.json" "src/prisma/"
      - name: Cache
        uses: actions/cache@v4
        with:
          path: server.zip
          key: ${{github.sha}}-build-cache
  release_dev:
    runs-on: ubuntu-20.04
    needs: [build, zip]
    if: ${{ github.ref_name != 'main' }}
    steps:
      - name: Restore cached zip build
        uses: actions/cache/restore@v4
        with:
          path: server.zip
          key: ${{github.sha}}-build-cache
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}/${{github.sha}}
          generate_release_notes: true
          files: server.zip
          token: ${{ secrets.GITHUB_TOKEN }}
  release_prod:
    runs-on: ubuntu-20.04
    needs: [build, zip]
    if: ${{ github.ref_name == 'main' }}
    steps:
      - name: Restore cached zip build
        uses: actions/cache/restore@v4
        with:
          path: server.zip
          key: ${{github.sha}}-build-cache
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          make_latest: true
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}/${{github.sha}}
          generate_release_notes: true
          files: server.zip
          token: ${{ secrets.GITHUB_TOKEN }}
